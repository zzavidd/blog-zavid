###############
# Base Schema
###############

type Post {
  id: Int
  title: String!
  type: PostType!
  datePublished: String
  content: String
  image: String
  # contentImages: [String]
  slug: String
  excerpt: String
  status: PostStatus
  createTime: String
  domainId: Int
  domainType: PostType
}

type Query {
  getAllPosts(
    limit: Int
    sort: PostSortOptions
    type: PostTypeOptions
    status: PostStatusOptions
  ): [Post]
  getSinglePost(id: Int!): Post
}

type Mutation {
  createPost(post: PostInput, isPublish: Boolean, isTest: Boolean): Post
  updatePost(
    id: Int!
    post: PostInput!
    isPublish: Boolean
  ): Post
  deletePost(id: Int!): Post
}

###############
# Helpers
###############

enum PostType {
  Epistle
  Reverie
  Poem
  Page
  Musing
}

enum PostSortField {
  id
  title
  type
  datePublished
  status
  createTime
}

enum PostOrder {
  ASC
  DESC
  RANDOM
}

enum PostStatus {
  DRAFT
  PRIVATE
  PUBLISHED
}

input PostInput {
  # No slug
  title: String!
  type: PostType!
  datePublished: String
  content: String
  image: ImageState
  # contentImages: [String]
  excerpt: String
  status: PostStatus
  domainId: Int
  domainType: PostType
}

input PostSortOptions {
  field: PostSortField
  order: PostOrder
}

input PostTypeOptions {
  include: [PostType]
  exclude: [PostType]
}

input PostStatusOptions {
  include: [PostStatus]
  exclude: [PostStatus]
}

input ImageState {
  source: String
  hasChanged: Boolean
}