@import '../App';

////////////////////////////////
/// Form
////////////////////////////////

.form {
  display: block;
}

.form-pv {
  @include responsive(display, grid, $lg: block);
  grid-template-columns: repeat(2, 50%);
}

%form-pane {
  @media (min-width: $break-md) {
    height: 100vh;
    overflow-y: scroll;
  }
}

.form-editor {
  @include responsive(width, 70%, $xl: 80%, $lg: 90%, $sm: 100%);
  margin: 0 auto;
  padding: 1em;
}

.form-editor-pv {
  @extend %form-pane;
  margin: 0 auto;
  padding: 1em 2em;
  width: 100%;
}

.form-preview {
  @extend %form-pane;
  @include responsive(display, block, $md: none);
  @include themer(&, border-color, #000, #fff);
  @include themer(
    $class: &,
    $attr: background-color,
    $light: rgba($color: #fff, $alpha: 0.7),
    $dark: rgba($color: #000, $alpha: 0.7)
  );
  border-left: 1px solid;
  padding: 2em;
}

.form-preview-text {
  font-size: 1.1em;
}

.form-footer-buttons {
  @include responsive(width, 70%, $xl: 80%, $lg: 90%, $sm: 100%);
  display: flex;
  justify-content: space-between;
  margin: 0 auto;

  button {
    min-width: 175px;
    @media (max-width: $break-sm) {
      min-width: inherit;
      width: 48%;
    }
  }
}

.form-footer-button-spacer {
  @include responsive(width, auto, $sm: 100%);
}

.form-admin-button {
  @include responsive(display, block, $md: none);
}

.form-field-row {
  margin: 0;
}

.form-field {
  @include responsive(padding, 1em, $sm: 0.8em 1em);
}

////////////////////////////////
/// Labels
////////////////////////////////

.label {
  @include responsive(font-size, 1.2em, $sm: 1.1em);
  display: block;
  font-family: $title-font;
}

////////////////////////////////
/// Inputs
////////////////////////////////

%input {
  @include responsive(font-size, 1.2em, $sm: 1em);
  @include responsive(padding, 0.4em, $sm: 0.4em 0);
  background: none;
  border-style: none;
  font-size: 1.2em;
  outline: none;
  padding: 0.4em;
  width: 100%;
}

%themed-input {
  @extend %input;
  @include themer(
    &,
    border-bottom,
    $light: 1px solid $fade-dark,
    $dark: 1px solid $fade-light
  );
}

.text-input-field {
  @include themer(
    &,
    border-bottom,
    $light: 1px solid rgba(0, 0, 0, 0.7),
    $dark: 1px solid rgba(255, 255, 255, 0.7)
  );
  align-items: center;
  display: flex;
  width: 100%;
}

.text-input {
  @extend %input;
}

.text-click-input {
  width: 100%;

  input {
    cursor: pointer;
  }
}

@mixin theme-extend($class, $target) {
  @each $theme in $themes {
    &-#{$theme} {
      @extend #{$class} !optional;
      @extend #{$target}-#{$theme};
    }
  }
}

.textarea {
  @include theme-extend(&, '%themed-input');
  overflow: auto;
}

%select {
  appearance: none;
  background-image: linear-gradient(45deg, transparent 50%, #808080 50%),
    linear-gradient(135deg, #808080 50%, transparent 50%);
  background-position: calc(100% - 13px) calc(1em + 1px),
    calc(100% - 8px) calc(1em + 1px);
  background-repeat: no-repeat;
  background-size: 5px 5px, 5px 5px;
}

.select {
  @extend %select;
  @include theme-extend(&, '%themed-input');
}

.select-round {
  @extend %input;
  @extend %select;
  @include themer(&, border-color, $light: $fade-dark, $dark: $fade-light);
  border: 2px solid;
  border-radius: 10px;
  margin-right: 1em;
  padding: 0.4em;
}

////////////////////////////////
/// Checkbox
////////////////////////////////

/* Customize the label (the container) */
.checkbox-group {
  $color: #ac1ef3;

  cursor: pointer;
  display: block;
  margin-bottom: 0.8em;
  padding-left: 2em;
  position: relative;
  user-select: none;

  input {
    cursor: pointer;
    height: 0;
    opacity: 0;
    position: absolute;
    width: 0;

    &:checked ~ .checkbox-mark {
      background-color: $color;

      /// Show the checkmark when checked.
      &::after {
        display: block;
      }
    }
  }

  /// On mouse-over, add a grey background color.
  &:hover input ~ .checkbox-mark {
    background-color: adjust-color($color, $lightness: 20%);
  }
}

/* Create a custom checkbox */
.checkbox-mark {
  $size: 20px;
  background-color: #eee;
  border-radius: 5px;
  height: $size;
  left: 0;
  position: absolute;
  top: 3px;
  width: $size;

  /// Create the checkmark/indicator (hidden when not checked)
  &::after {
    content: '';
    display: none;
    position: absolute;
  }
}

/// Style the checkmark/indicator.
.checkbox-group .checkbox-mark::after {
  border: solid #fff;
  border-width: 0 3px 3px 0;
  height: 13px;
  left: 8px;
  top: 2px;
  transform: rotate(45deg);
  width: 5px;
}

////////////////////////////////
/// Datepickers & Timepickers
////////////////////////////////

.datepicker-field {
  align-items: center;
  display: flex;

  .datepicker {
    align-items: center;
    background: initial;
    border-style: none;
    cursor: pointer;
    display: flex;
    padding: 0;
    width: 100%;
  }

  .calendar-icon {
    margin: 0 0.2em 0 0.4em !important;
    @media (max-width: $break-md) {
      margin-right: 0.5em !important;
    }
  }
}

.datepicker-modal {
  justify-content: space-evenly;
  padding: 2em;

  select {
    @include responsive(font-size, 1.4em, $sm: 1.2em);
  }
}

////////////////////////////////
/// File Selectors
////////////////////////////////

.fs-image-container {
  align-items: center;
  border: 2px dashed rgb(158, 158, 158);
  display: flex;
  justify-content: center;
  text-align: center;

  div {
    height: 100%;
  }
}

.fs-image-text {
  cursor: pointer;
  margin: 0;
}

.fs-image {
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.fs-image-button {
  @include hover-scale(1.2);
  background: rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  position: absolute;
  right: -8px;
  top: -8px;

  svg {
    border-radius: 50%;
    font-size: 1em;
    margin-right: 0 !important;

    path {
      color: rgba(0, 0, 0, 0.9) !important;
    }
  }
}

////////////////////////////////
/// Switch
////////////////////////////////

$switch-height: 20px;

%switch-panel {
  align-items: center;
  border-radius: 10px;
  display: flex;
  height: 18px;
  width: 40px;
}

%switch-dial {
  align-items: center;
  background-color: #fff;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  height: $switch-height;
  justify-content: center;
  position: relative;
  transition-duration: 0.8s;
  width: $switch-height;

  * {
    color: #000 !important;
    font-size: 0.7em;
    margin: 0;
  }
}

/// Light
.switch-panel-unchecked {
  @extend %switch-panel;
  background-color: #e6e6e6;
  border: 1px solid $dark;

  .switch-dial {
    @extend %switch-dial;
    border: 1px solid $dark;
    left: -2%;
  }
}

/// Dark
.switch-panel-checked {
  @extend %switch-panel;
  background-color: #505050;

  .switch-dial {
    @extend %switch-dial;
    left: 50%;
  }
}

////////////////////////////////
/// Timelime
////////////////////////////////

.timeline {
  @include responsive(font-size, 1.1em, $sm: 0.7em);
  @include responsive(align-items, flex-start, $sm: flex-end);
  display: grid;
  grid-template-columns: repeat(2, 50%);
  margin-top: 2.5em;
}

.timeline-previous {
  .timeline-content {
    align-items: center;
    display: flex;
  }
}

.timeline-next {
  align-items: flex-end;
  display: flex;
  flex-direction: column;

  .timeline-content {
    align-items: center;
    display: flex;
    flex-direction: row-reverse;
    text-align: right;
  }

  svg {
    margin-left: 0.4em;
  }
}

.timeline-image-container {
  margin: 0.5em 1.4em 0;
  max-width: 150px;

  .timeline-image {
    border-radius: 10px;
  }
}

.timeline-text {
  padding: 0 0.5em;
}
