version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:16.3
  ssh:
    docker:
      - image: arvindr226/alpine-ssh

commands:
  install_dependencies:
    description: "Installs all project dependencies."
    steps:
      - checkout
      - restore_cache:
          name: Restore yarn cache
          keys:
            - yarn-packages-{{ checksum "./code/yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --immutable
          working_directory: ./code
      - save_cache:
          name: Save yarn cache
          key: yarn-packages-{{ checksum "./code/yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged
  transfer_scripts:
    description: "Transfers deployment scripts via SCP"
    parameters:
      mode:
        type: string
    steps:
      - checkout
      - run:
          name: Transfer scripts
          command: scp -o StrictHostKeyChecking=no -r ./deploy/scripts/* $SSH_USER@$SSH_ADDRESS:/home/circleci/scripts/
          no_output_timeout: 30s
      - run:
          name: Update secrets and run << parameters.mode >> deployment
          command: |
            ssh -o StrictHostKeyChecking=no -v $SSH_USER@$SSH_ADDRESS "./scripts/deploy.<< parameters.mode >>.sh"

jobs:
  inspect:
    executor: node
    steps:
      - install_dependencies
      - run:
          name: Run TypeScript checks
          command: yarn run check
          working_directory: ./code
      - run:
          name: Run ESLint
          command: yarn run lint --max-warnings 0
          working_directory: ./code
      - run:
          name: Run Prettier checks
          command: yarn run prettify
          working_directory: ./code
  test:
    executor: node
    steps:
      - install_dependencies
      - run:
          name: Run tests
          command: yarn test
          working_directory: ./code/test
          no_output_timeout: 2m
  deploy_staging:
    executor: ssh
    steps:
      - transfer_scripts:
          mode: staging
  # deploy_prod:
  #   executor: ssh
  #   steps:
  #     - transfer_scripts:
  #         mode: production

workflows:
  build-inspect-test:
    jobs:
      # - inspect
      # - test
      - deploy_staging
      # - deploy_staging:
      #     requires:
      #       - inspect
      #       - test
      # filters:
      #   branches:
      #     only:
      #       - main
      # - deploy_prod:
      #     requires:
      #       - inspect
      #       - test
      #     filters:
      #       branches:
      #         only:
      #           - production
