generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

generator zod {
  provider          = "prisma-zod-generator"
  output            = "./src/schemas"
  isGenerateSelect  = "true"
  isGenerateInclude = "true"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Diary {
  id          Int             @id @unique(map: "id_UNIQUE") @default(autoincrement()) @db.UnsignedInt
  title       String          @db.VarChar(100)
  date        DateTime?       @db.Date
  content     String          @db.Text
  categories  DiaryCategory[] @relation()
  status      DiaryStatus
  entryNumber Int             @unique(map: "entryNumber_UNIQUE") @db.UnsignedInt
  footnote    String          @db.Text
  isFavourite Boolean         @default(false)
  tags        Json

  @@map("diary")
}

model DiaryCategory {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  entries Diary[]

  @@map("diary_categories")
}

model Exclusive {
  id         Int             @id @unique(map: "id_UNIQUE") @default(autoincrement()) @db.UnsignedInt
  subject    String          @db.VarChar(96)
  content    String          @db.Text
  preview    String          @db.Text
  endearment String          @db.VarChar(24)
  date       DateTime?       @db.Date
  status     ExclusiveStatus
  slug       String?         @db.VarChar(96)

  @@map("exclusives")
}

model Page {
  id           Int      @id @unique(map: "id_UNIQUE") @default(autoincrement()) @db.UnsignedInt
  title        String   @db.VarChar(45)
  content      String   @db.Text
  excerpt      String   @db.Text
  slug         String   @unique(map: "slug_UNIQUE") @db.VarChar(45)
  lastModified DateTime @default(now()) @db.DateTime(0)
  isEmbed      Boolean  @default(false)

  @@map("pages")
}

model Post {
  id            Int        @id @unique(map: "id_UNIQUE") @default(autoincrement()) @db.UnsignedInt
  title         String     @db.Text
  datePublished DateTime?  @db.Date
  content       String     @db.LongText
  image         String?    @db.Text
  contentImages String?    @db.Text
  status        PostStatus
  slug          String?    @db.Text
  excerpt       String     @db.Text
  type          PostType
  typeId        Int?
  createTime    DateTime?  @default(now()) @db.DateTime(0)
  domainId      Int?       @db.UnsignedInt

  @@index([createTime, id], map: "type_status_date")
  @@map("posts")
}

model Subscriber {
  id            Int      @id @unique(map: "id_UNIQUE") @default(autoincrement()) @db.UnsignedInt
  email         String   @unique(map: "email_UNIQUE") @db.VarChar(45)
  firstname     String?  @db.VarChar(45)
  lastname      String?  @db.VarChar(45)
  subscriptions Json
  token         String   @db.Text
  createTime    DateTime @default(now()) @db.DateTime(0)

  @@map("subscribers")
}

model WishlistItem {
  id           Int                @id @unique(map: "id_UNIQUE") @default(autoincrement()) @db.UnsignedInt
  name         String
  price        Float
  quantity     Int
  categoryId   Int?
  priority     WishlistPriority
  visibility   WishlistVisibility
  image        String             @db.Text
  href         String             @db.Text
  comments     String
  reservees    Json
  purchaseDate DateTime?          @db.Date
  createTime   DateTime           @default(now()) @db.Timestamp(0)
  category     WishlistCategory?  @relation(fields: [categoryId], references: [id])

  @@index([categoryId], map: "wishlist_categoryId_fkey")
  @@map("wishlist")
}

model WishlistCategory {
  id           Int            @id @unique(map: "id_UNIQUE") @default(autoincrement())
  name         String         @unique
  WishlistItem WishlistItem[]

  @@map("wishlist_categories")
}

enum WishlistPriority {
  HIGH
  MEDIUM
  LOW

  @@map("Priority")
}

enum WishlistVisibility {
  PUBLIC
  PRIVATE

  @@map("Visibility")
}

enum DiaryStatus {
  DRAFT
  PROTECTED
  PRIVATE
  PUBLISHED
}

enum ExclusiveStatus {
  DRAFT
  PUBLISHED
}

enum PostType {
  REVERIE
  EPISTLE
  POEM
  MUSING
  ADDENDUM
  PASSAGE
}

enum PostStatus {
  DRAFT
  PROTECTED
  PRIVATE
  PUBLISHED
}
